<html>
  <head>
    <meta http-equiv="Content-Type" content="text/html;charset=utf-8" />

    <link rel="stylesheet" type="text/css" href="styles.css" />

    <script class="asm" id="minimum.asm" language="text/registermaschine">
      ; Minimum von zwei Zahlen bestimmen und ausgeben
      ; ==============================================

      ; ---------------- Zahlen einlesen -------------------------------------------
      01 INP 01    ; 1. Zahl einlesen und an Adresse 1 (Datenspeicher) einlesen
      02 INP 02    ; 2. Zahl einlesen und an Adresse 2 (Datenspeicher) einlesen

      ; ---------------- Subtrahiere: 1.Zahl - 2.Zahl ------------------------------
      03 LDA 01    ; Lade 1. Zahl von Adresse 1 (Datenspeicher) in den Akkumulator
      04 SUB 02    ; Subtrahiere 1.Zahl - 2.Zahl

      ; ---------------- Auswerten des Subtraktionsergebnis (evtl. Sprung) ---------
      05 JGE 08    ; Sprung wenn a-b >= 0; d.h b <= a

      ; ---------------- 1. Zahl ist das Minimum -----------------------------------
      06 LDA 01    ; 1. Zahl in den Akku
      07 JMP 09    ; Sprung zur Ausgabe

      ; ---------------- 2. Zahl ist das Minimum -----------------------------------
      08 LDA 02    ; 2. Zahl in den Akku

      ; ---------------- Ausgabe des Akkumulatorinhalts (Minimum) ------------------
      09 OUT 00    ; Ausgabe des Akkumulatorinhalts

      10 HLT 99    ; Programmende
    </script>

    <script class="asm" id="mittelw.asm" language="text/registermaschine">
      ; Mittelwert zu einzugebenden Zahlen ermitteln und ausgeben
      ; =========================================================

      ; ---------------- Zahl einlesen ---------------------------------------------
      01 INP 01    ; Zahl einlesen und an Adresse 1 (Datenspeicher) einlesen

      ; ---------------- Wenn Zahl = 0, dann naechsten Anweisungen ueberspringen ---
      02 LDA 01    ; Lade Zahl von Adresse 1 (Datenspeicher) in den Akkumulator
      03 JEZ 10    ; Falls Akku == 0, springe an Programmadr. 10

      ; ---------------- Zahl auf bisherige Summe aufaddieren ----------------------
      04 ADD 02    ; Addiere auf Akku Inhalt von Adresse 2 (Datenspeicher)
      05 STA 02    ; Speichere Akku an Adresse 2 (Datenspeicher)

      ; ---------------- Erhoehe Wertezaehler (Adresse 3) um 1 ---------------------
      06 LDK 01    ; Lade Wert 1 in den Akku
      07 ADD 03    ; Inkrementiere Akku um 1
      08 STA 03    ; Wertezaehler (in Akku) wieder an Adresse 3 zurueckschreiben

      ; ---------------- Springe an Programmanfang zurueck -------------------------
      09 JMP 01    ; Springe zurueck am Programmadr. 1

      ; ---------------- Ermittle den Mittelwert und gib ihn aus -------------------
      10 LDA 02    ; Lade die Summe aller Werte
      11 DIV 03    ; Teile Akku durch den Wertezaehler
      12 OUT 00    ; Mittelwert (aus Akku) ausgeben

      13 HLT 99    ; Programmende
    </script>

    <script class="asm" id="sum_1_n.asm" language="text/registermaschine">
      ; Programm zur Berechnung der Summe 1+2+3+...+n; wobei n einzugeben ist
      ; =====================================================================

      ;-------- Einlesen von n ---------------------------------------------
      01 INP 1   ; Lies n ein (an Adresse 1)

      ;-------- Zaehlvariable und Einer-Konstante initialisieren -----------
      02 LDK 1   ; Setze Akku (Zaehlvariable) auf 1
      03 STA 2   ; Speichere Zaehlvariable an Adresse 2
      04 STA 3   ; Speichere Konstante 1 an Adresse 3

      ;-------- Schleife: for (i=1; i<=n; i++) -----------------------------
      05 SUB 1   ; Subtrahiere: Zaehlvar. - n (an Adresse 1)
      06 JGZ 14  ; Wenn Akku > 0, dann springe an Adresse 14
      07 LDA 2   ; Lade Zaehlvar. (an Adresse 2) in Akku
      08 ADD 4   ; Addiere auf Zaehlvariable bisherige Summe
      09 STA 4   ; Schreibe neue Summe zurueck an Adresse 4
      10 LDA 2   ; Lade Zaehlvar. (an Adresse 2) in Akku
      11 ADD 3   ; Inkrementiere Akku um 1
      12 STA 2   ; Speichere inkrem. Zaehlvar. wieder an Adresse 2
      13 JMP 5   ; Springe zurueck an Programmadr. 5
      14 OUT 4   ; Gib berechnete Summe (an Adresse 4) aus

      15 HLT 99
    </script>

    <script class="asm" id="summe.asm" language="text/registermaschine">
      ; Summe von einzugebenden Zahlen ermitteln und ausgeben
      ; =====================================================

      ; ---------------- Zahl einlesen ---------------------------------------------
      01 INP 01    ; Zahl einlesen und an Adresse 1 (Datenspeicher) einlesen

      ; ---------------- Wenn Zahl = 0, dann naechsten Anweisungen ueberspringen ---
      02 LDA 01    ; Lade Zahl von Adresse 1 (Datenspeicher) in den Akkumulator
      03 JEZ 07    ; Falls Akku == 0, springe an Programmadr. 7 (OUT 02)

      ; ---------------- Zahl auf bisherige Summe aufaddieren ----------------------
      04 ADD 02    ; Addiere auf Akku Inhalt von Adresse 2 (Datenspeicher)
      05 STA 02    ; Speichere Akku an Adresse 2 (Datenspeicher)

      ; ---------------- Sprung auf Programmanfang (neue Zahl einlesen ) -----------
      06 JMP 01    ; Springe zurück an Programmadr. 1 (INP 01)

      ; ---------------- Ermittelte Summe ausgeben und Programmende ----------------
      07 OUT 02    ; Gib Inhalt von Adresse 2 (Datenspeicher) aus
      08 HLT 99    ; Programmende
    </script>

    <script class="asm" id="potenz.asm" language="text/registermaschine">
      ; Berechnen und Ausgeben der Potenz von zwei Zahlen
      ; =================================================

      ;    Eingabe:
      ;       Die erste einzugebende Zahl ist die Basis und
      ;       die zweite einzugebende Zahl ist die Potenz
      ;    Ausgabe:
      ;       Ergebnis von (basis hoch potenz)

      ; ---- Initialisierung
        01 LDK 01    ; ergeb mit 1 initialisieren
        02 STA 01    ; ergeb (Adresse 1) zurueckschreiben
        03 STA 02    ; Wert 1 (fuer De-/Inkrementieren) an Adresse 2

      ; ---- Basis und Potenz einlesen
        04 INP 03    ; Einlesen einer Zahl (basis) an die Adresse 3
        05 INP 04    ; Einlesen einer Zahl (potenz) an die Adresse 4

      ; ---- Ergebnis der Potenz (basis hoch potenz) berechnen
        06 LDA 04    ; Lade Potenz lin Akkumulator
        07 JEZ 14    ; Falls potenz gleich 0 ist, Sprung auf 14 (Ergebnis ausgeben)
        08 SUB 02    ; Potenz um 1 dekrementieren
        09 STA 04    ; Potenz wieder zurueckspeichern (an die Adresse 4)
        10 LDA 03    ; Lade Basis in den Akku
        11 MUL 01    ; und dann Akku-Inhalt mit bisheriges Ergebnis multiplizieren
        12 STA 01    ; Speichere neuen Wert aus Akku zurueck nach Ergebnis (Adr. 1)
        13 JMP 06    ; Springe zurueck und fahre mit Algorithmus fort

      ; ---- Ausgabe des Ergebnis und Programmende
        14 OUT 01    ; Gib Ergebnis aus
        15 HLT 99
    </script>
  </head>

  <body>
    <div class="title">
      <h1>Registermaschine</h1>
      Simulation der Registermaschine aus der Vorlesung IG/A an der TH Nürnberg
      <p>Prof. J. Krumm, &copy;2018</p>

      <p>
        Beispielprogramme aus Helmut Herold et. al: Grundlagen der Informatik,
        2002
        <noscript>
          <p class="hilite">Dieses Programm benötigt Javascript</p>
        </noscript>
      </p>
    </div>

    <div class="registermachine">
      <div class="controls">
        <button onclick="p_reset()">Neustart</button>
        <button onclick="p_rewind()">&lt;</button>
        <button onclick="p_step()">&gt;</button>
        <button onclick="p_cont()">&gt;&gt;</button>
      </div>
      <div class="cpu">
        <svg
          id="registersvg" 
          class="regmachine"
          height = "1000"
          width = "650"
          xmlns="http://www.w3.org/2000/svg"
          xmlns:xlink="http://www.w3.org/1999/xlink"
        >
          <defs>
            <marker id='head' orient='auto' markerWidth='2' markerHeight='4'
                    refX='0.1' refY='2'>
              <path d='M0,0 V4 L2,2 Z' fill='blue' />
            </marker>
            <clipPath id="clip0">
              <rect x="38" y="137" width="514" height="800" />
            </clipPath>
            <linearGradient
              x1="154.5"
              y1="167.5"
              x2="154.5"
              y2="196.5"
              gradientUnits="userSpaceOnUse"
              spreadMethod="reflect"
              id="fill1"
            >
              <stop offset="0" stop-color="#A7B2C8" />
              <stop offset="0.5" stop-color="#9AA6BD" />
              <stop offset="1" stop-color="#8898B6" />
            </linearGradient>
            <linearGradient
              x1="436.5"
              y1="167.5"
              x2="436.5"
              y2="196.5"
              gradientUnits="userSpaceOnUse"
              spreadMethod="reflect"
              id="fill2"
            >
              <stop offset="0" stop-color="#A7B2C8" />
              <stop offset="0.5" stop-color="#9AA6BD" />
              <stop offset="1" stop-color="#8898B6" />
            </linearGradient>
            <linearGradient
              x1="154.5"
              y1="235.5"
              x2="154.5"
              y2="264.5"
              gradientUnits="userSpaceOnUse"
              spreadMethod="reflect"
              id="fill3"
            >
              <stop offset="0" stop-color="#A7B2C8" />
              <stop offset="0.5" stop-color="#9AA6BD" />
              <stop offset="1" stop-color="#8898B6" />
            </linearGradient>
            <linearGradient
              x1="378.5"
              y1="393.5"
              x2="378.5"
              y2="598.5"
              gradientUnits="userSpaceOnUse"
              spreadMethod="reflect"
              id="fill4"
            >
              <stop offset="0" stop-color="#A7B2C8" />
              <stop offset="0.5" stop-color="#9AA6BD" />
              <stop offset="1" stop-color="#8898B6" />
            </linearGradient>
            <linearGradient
              x1="151.5"
              y1="389.5"
              x2="151.5"
              y2="594.5"
              gradientUnits="userSpaceOnUse"
              spreadMethod="reflect"
              id="fill5"
            >
              <stop offset="0" stop-color="#A7B2C8" />
              <stop offset="0.5" stop-color="#9AA6BD" />
              <stop offset="1" stop-color="#8898B6" />
            </linearGradient>
            <linearGradient
              x1="436"
              y1="230.5"
              x2="436"
              y2="312.5"
              gradientUnits="userSpaceOnUse"
              spreadMethod="reflect"
              id="fill6"
            >
              <stop offset="0" stop-color="#A7B2C8" />
              <stop offset="0.5" stop-color="#9AA6BD" />
              <stop offset="1" stop-color="#8898B6" />
            </linearGradient>
          </defs>
          <g clip-path="url(#clip0)" transform="translate(-38 -137)">
            <rect
              x="70"
              y="138"
              width="448"
              height="231"
              fill="#EBC47F"
              fill-opacity="0.501961"
            />
            <rect
              x="103.5"
              y="167.5"
              width="102"
              height="29"
              stroke="#4B6893"
              stroke-width="0.666667"
              stroke-miterlimit="8"
              fill="url(#fill1)"
            />
            <text
              fill="#0350A0"
              font-family="Arial,Arial_MSFontService,sans-serif"
              font-weight="400"
              font-size="11"
              transform="translate(121.5 185)"
              id="pcreg"
            >
              Befehlszähler
            </text>
            <rect
              x="385.5"
              y="167.5"
              width="102"
              height="29"
              stroke="#4B6893"
              stroke-width="0.666667"
              stroke-miterlimit="8"
              fill="url(#fill2)"
            />
            <text
              fill="#0350A0"
              font-family="Arial,Arial_MSFontService,sans-serif"
              font-weight="400"
              font-size="11"
              transform="translate(405.927 185)"
              id="areg"
            >
              Akkumulator
            </text>
            <rect
              x="103.5"
              y="235.5"
              width="102"
              height="29"
              stroke="#4B6893"
              stroke-width="0.666667"
              stroke-miterlimit="8"
              fill="url(#fill3)"
            />
            <text
              fill="#0350A0"
              font-family="Arial,Arial_MSFontService,sans-serif"
              font-weight="400"
              font-size="11"
              transform="translate(118.25 253)"
              id="cur_instr"
            >
              Befehlsregister
            </text>
            <rect
              x="97.5001"
              y="389.5"
              width="108"
              height="205"
              stroke="#4B6893"
              stroke-width="0.666667"
              stroke-miterlimit="8"
              fill="url(#fill5)"
            />
            <path id="alu_background"
              d="M385.5 230.5 486.5 230.5 486.5 311.834 454.27 312.5 437.656 283.174 421.043 311.5 385.5 311.834 385.5 230.5Z"
              stroke="#4B6893"
              stroke-width="0.666667"
              stroke-miterlimit="8"
              fill="url(#fill6)"
              fill-rule="evenodd"
            />
            <text
              fill="#4B6893"
              text-anchor="middle"
              font-family="Arial,Arial_MSFontService,sans-serif"
              font-weight="400"
              font-size="11"
               x="385" y="230" width="103" height="50"
            >
              <tspan id="alu_operation">Operation</tspan>
            </text>
            
            <text>
              <tspan font-size="9" x="-18" y="43" id="alu_left_register">0</tspan>
              <tspan font-size="9" x="44.3299" y="43" id="alu-right-register">0</tspan>
            </text>
            <!-- Befehlszähler -> Programmspeicher -->
            <polyline id="pc-progmem-connection"
              points="104,182 50,182 50,430 90,430"
              class="statemachineArrow"/>
            <polyline id="progmem-instrreg-connection"
              points="207,430 240,430 240,300 155,300 155,270"
              class="statemachineArrow"
            />
            <path id="instrreg-aluOp-connection"
              d="M0 1-23.9999 1-22.9999 0-22.9999 149.701-23.9999 148.701 21.9367 148.701 21.9367 241.733 19.9367 241.733 19.9367 149.701 20.9367 150.701-24.9999 150.701-24.9999-1 0-1ZM24.9367 240.4 20.9367 248.4 16.9367 240.4Z"
              fill="#4B6893"
              transform="matrix(-4.37114e-08 1 1 4.37114e-08 154 235)"
            />
            <path id="op2-acc-connection"
              d="M0-1 65-1 65 117.448 7.99999 117.448 7.99999 115.448 64 115.448 63 116.448 63 0 64 1 0 1ZM9.33333 120.448 1.33333 116.448 9.33333 112.448Z"
              fill="#4B6893"
              transform="matrix(1 0 0 -1 487 298.448)"
            />
            <polyline id="datamem-op2-connection"
              class="statemachineArrow hide"
              points="435,430 470,430 470,318"
            />
            <polyline id="instrreg-datamem-connection"
              class="statemachineArrow hide"
              points="205,250 275,250 275,430 318,430"
            />
            <polyline id="instrreg-accu-connection"
              class="statemachineArrow hide"
              points="205,250 275,250 275,182 379,182"
            />
            <path id="acc-op1-connection"
              d="M385 182 357 182 358 181 358 343.167 357 342.167 403.661 342.167 402.661 343.167 402.661 317.833 404.661 317.833 404.661 344.167 356 344.167 356 180 385 180ZM399.661 319.167 403.661 311.167 407.661 319.167Z"
              fill="#4B6893"
            />
            <polyline id="userInput-datamem-connection"
              class="statemachineArrow hide"
              points="555,498 490,498 490,430 440,430"
            />
            <polyline id="userInput-acc-connection"
              class="statemachineArrow hide"
              points="555,498 510,498 510,182 493,182"
            />
            <polyline id="datamem-acc-connection"
              class="statemachineArrow hide"
              points="435,430 550,430 550,182 493,182"
            />
          </g>
          <foreignObject requiredExtensions="http://www.w3.org/1999/xhtml"
          x="57"
          y="235"
          width="112"
          height="800" >
              <body xmlns="http://www.w3.org/1999/xhtml">
                <div>Programmsp.</div>
                <div class="memory program">
                  <table class="memorytable">
                    <thead>
                      <tr>
                        <th></th>
                        <th>Adr</th>
                        <th>Befehl</th>
                      </tr>
                    </thead>
                    <tbody id="pmem"></tbody>
                  </table>
                </div>
              </body>
          </foreignObject>
          <foreignObject requiredExtensions="http://www.w3.org/1999/xhtml"
          x="285"
          y="235"
          width="112"
          height="800"
           >
            <body xmlns="http://www.w3.org/1999/xhtml">
              <div>Datenspeicher</div>
              <div class="memory data">
                <table id="memoryTable" class="memorytable">
                  <thead>
                    <tr>
                      <th>Adr</th>
                      <th>Wert</th>
                    </tr>
                  </thead>
                  <tbody id="dmem"></tbody>
                </table>
              </div>
            </body>
          </foreignObject>
          <foreignObject requiredExtensions="http://www.w3.org/1999/xhtml"
          x="520"
          y="300"
          width="200"
          height="80">
            <body xmlns="http://www.w3.org/1999/xhtml">
              <div class="input">
                <p>Input</p>
                <input type="text" id="userInput" size="5">
              </div>
            </body>
          </foreignObject>
        </svg>
      </div>
      <div class="memories">
          
      </div>
      <div class="descriptions">
        <div class="status">
          <b>Beschreibung:</b>
          <span id="explained"></span>
        </div>
        <div class="status">
          <b>Status:</b>
          <span id="cur_output"></span>
        </div>
      </div>
      <div class="program">
        <h2>Quelltext</h2>
        <button onclick="p_clearCode()">Lösche Text</button>
        <button onclick="p_loadCode()">Lade Beispiel</button>
        <select id="program-sel"></select>
        <p>
          <textarea spellcheck="false" class="code" id="code"></textarea>
        </p>
      </div>
    </div>
  </body>

  <script type="text/javascript" src="registermachine.js"></script>
</html>
